"""create_tasks_tables

Revision ID: 9758ae21709f
Revises: 6b6f54cd8dc5
Create Date: 2024-11-06 12:42:57.162781

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9758ae21709f'
down_revision: Union[str, None] = '6b6f54cd8dc5'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('task_category',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('category', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_category_category'), 'task_category', ['category'], unique=False)
    op.create_index(op.f('ix_task_category_id'), 'task_category', ['id'], unique=False)
    op.create_table('task_counter_type',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('counter_type', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_counter_type_counter_type'), 'task_counter_type', ['counter_type'], unique=False)
    op.create_index(op.f('ix_task_counter_type_id'), 'task_counter_type', ['id'], unique=False)
    op.create_table('tasks',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('title', sa.String(), nullable=True),
    sa.Column('description', sa.String(), nullable=True),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('project_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('status_id', sa.Integer(), nullable=True),
    sa.Column('category_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_tasks_id'), 'tasks', ['id'], unique=False)
    op.create_index(op.f('ix_tasks_title'), 'tasks', ['title'], unique=False)
    op.create_table('task_accountable',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('accountable_id', sa.Integer(), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['accountable_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_accountable_id'), 'task_accountable', ['id'], unique=False)
    op.create_table('task_comments',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('comment', sa.String(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_comments_comment'), 'task_comments', ['comment'], unique=False)
    op.create_index(op.f('ix_task_comments_id'), 'task_comments', ['id'], unique=False)
    op.create_table('task_counter',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('start_time', sa.DateTime(), nullable=True),
    sa.Column('end_time', sa.DateTime(), nullable=True),
    sa.Column('notes', sa.String(), nullable=True),
    sa.Column('counter_type_id', sa.Integer(), nullable=True),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['counter_type_id'], ['task_counter_type.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_counter_id'), 'task_counter', ['id'], unique=False)
    op.create_index(op.f('ix_task_counter_notes'), 'task_counter', ['notes'], unique=False)
    op.create_table('task_update',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('update', sa.JSON(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_task_update_id'), 'task_update', ['id'], unique=False)
    op.create_index(op.f('ix_task_update_update'), 'task_update', ['update'], unique=False)
    op.create_table('taskassignee',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('assignee_id', sa.Integer(), nullable=True),
    sa.Column('task_id', sa.Integer(), nullable=True),
    sa.Column('create_time', sa.DateTime(), nullable=True),
    sa.Column('update_time', sa.DateTime(), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=True),
    sa.ForeignKeyConstraint(['assignee_id'], ['users.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['task_id'], ['tasks.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_taskassignee_id'), 'taskassignee', ['id'], unique=False)
    op.create_foreign_key(None, 'projects', 'teams', ['team_id'], ['id'], ondelete='CASCADE')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'projects', type_='foreignkey')
    op.drop_index(op.f('ix_taskassignee_id'), table_name='taskassignee')
    op.drop_table('taskassignee')
    op.drop_index(op.f('ix_task_update_update'), table_name='task_update')
    op.drop_index(op.f('ix_task_update_id'), table_name='task_update')
    op.drop_table('task_update')
    op.drop_index(op.f('ix_task_counter_notes'), table_name='task_counter')
    op.drop_index(op.f('ix_task_counter_id'), table_name='task_counter')
    op.drop_table('task_counter')
    op.drop_index(op.f('ix_task_comments_id'), table_name='task_comments')
    op.drop_index(op.f('ix_task_comments_comment'), table_name='task_comments')
    op.drop_table('task_comments')
    op.drop_index(op.f('ix_task_accountable_id'), table_name='task_accountable')
    op.drop_table('task_accountable')
    op.drop_index(op.f('ix_tasks_title'), table_name='tasks')
    op.drop_index(op.f('ix_tasks_id'), table_name='tasks')
    op.drop_table('tasks')
    op.drop_index(op.f('ix_task_counter_type_id'), table_name='task_counter_type')
    op.drop_index(op.f('ix_task_counter_type_counter_type'), table_name='task_counter_type')
    op.drop_table('task_counter_type')
    op.drop_index(op.f('ix_task_category_id'), table_name='task_category')
    op.drop_index(op.f('ix_task_category_category'), table_name='task_category')
    op.drop_table('task_category')
    # ### end Alembic commands ###
